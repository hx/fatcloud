/*This is a prototype class for FatCloud skins. When you write a newskin, you should extend this class.*/package  {		import flash.display.*;	import flash.external.ExternalInterface;	import flash.events.*;	import DOMTagEvent;		public class FatCloudSkin extends Sprite {						private var suspendEvents:Boolean=false;		public var firstRender:Boolean=false;				public function FatCloudSkin() { }						// Skin can call this function to notify the DOM that a		// tag has received focus. Use tag object or tag index.		protected function tagFocus(tag)	{tagEvent(tag, 'focus')}				// Skin can call this function to notify the DOM that a		// tag has lost focus. Use tag object or tag index.		protected function tagBlur(tag)		{tagEvent(tag, 'blur')}				// Skin can call this function to notify the DOM that a		// tag has been selected. Use tag object or tag index.		protected function tagSelect(tag)	{tagEvent(tag, 'select')}				// This function is used by the above 3 to send events		// to the DOM.		protected function tagEvent(tag, eventName:String) {			if(suspendEvents) return false;			if(typeof tag=='object') tag=findTagIndex(tag);			ExternalInterface.call('fatCloud.SWFTagEvent',FatCloud.params.id,tag,eventName);		}				private function findTagIndex(tag:Object):uint {			for(var i:uint=0;i<FatCloud.tags.length;i++) if(tag===FatCloud.tags[i]) return i;			return 0;		}				// Your skin will dispatch these events when tags in		// the DOM are focussed, blurred or selected. Listen		// for DOMTagEvent.FOCUS, DOMTagEvent.BLUR and		// DOMTagEvent.SELECT. Use the event object's tag and		// tagIndex properties to determine which tag triggered		// the event. Check out SimpleSkin.as for a practical		// example.		public function dispatchDOMTagEvent(tagIndex:uint, eventName:String) {			suspendEvents=true;			dispatchEvent(new DOMTagEvent(FatCloud.tags[tagIndex], tagIndex, eventName));			suspendEvents=false;		}		// Recall the last skin state from the server-side cache.		// Will return FALSE if tags or FatCloud options have		// changed.		public static function getSkinCache() {			return ExternalInterface.call('fatCloud.getSkinCache',FatCloud.params.id);		}				// Save the current skin state to the server-side cache		// using an AJAX call. Can help save loading time.		public static function setSkinCache(value) {			ExternalInterface.call('fatCloud.setSkinCache',FatCloud.params.id,value);		}			}	}